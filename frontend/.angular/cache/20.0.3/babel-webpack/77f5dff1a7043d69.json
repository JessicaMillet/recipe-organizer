{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nlet RecipeListComponent = class RecipeListComponent {\n  recipeService;\n  recipes = [];\n  newRecipe = {\n    title: '',\n    ingredients: '',\n    instructions: '',\n    imageUrl: ''\n  };\n  editRecipe = {\n    title: '',\n    ingredients: '',\n    instructions: '',\n    imageUrl: ''\n  };\n  editingId = null;\n  constructor(recipeService) {\n    this.recipeService = recipeService;\n    this.loadRecipes();\n  }\n  loadRecipes() {\n    this.recipeService.getRecipes().subscribe(data => this.recipes = data);\n  }\n  addRecipe() {\n    this.recipeService.addRecipe(this.newRecipe).subscribe(() => {\n      this.newRecipe = {\n        title: '',\n        ingredients: '',\n        instructions: '',\n        imageUrl: ''\n      };\n      this.loadRecipes();\n    });\n  }\n  deleteRecipe(id) {\n    this.recipeService.deleteRecipe(id).subscribe(() => this.loadRecipes());\n  }\n  startEdit(recipe) {\n    this.editingId = recipe._id;\n    this.editRecipe = {\n      ...recipe\n    };\n  }\n  cancelEdit() {\n    this.editingId = null;\n  }\n  updateRecipe(recipe) {\n    if (this.editRecipe._id) {\n      this.recipeService.updateRecipe(this.editRecipe).subscribe(() => {\n        this.editingId = null;\n        this.loadRecipes();\n      });\n    }\n  }\n};\nRecipeListComponent = __decorate([Component({\n  selector: 'app-recipe-list',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})], RecipeListComponent);\nexport { RecipeListComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","RecipeListComponent","recipeService","recipes","newRecipe","title","ingredients","instructions","imageUrl","editRecipe","editingId","constructor","loadRecipes","getRecipes","subscribe","data","addRecipe","deleteRecipe","id","startEdit","recipe","_id","cancelEdit","updateRecipe","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\jessi\\OneDrive\\Desktop\\My projects\\recipe-organizer\\frontend\\src\\app\\recipe-list\\recipe-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RecipeService, Recipe } from '../recipe.service';\r\n\r\n@Component({\r\n  selector: 'app-recipe-list',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './recipe-list.component.html',\r\n  styleUrls: ['./recipe-list.component.css']\r\n})\r\nexport class RecipeListComponent {\r\n  recipes: Recipe[] = [];\r\n  newRecipe: Recipe = { title: '', ingredients: '', instructions: '', imageUrl: '' };\r\n  editRecipe: Recipe = { title: '', ingredients: '', instructions: '', imageUrl: '' };\r\n  editingId: string | null = null;\r\n  \r\n  constructor(private recipeService: RecipeService) {\r\n    this.loadRecipes();\r\n  }\r\n\r\n  loadRecipes() {\r\n    this.recipeService.getRecipes().subscribe(data => this.recipes = data);\r\n  }\r\n\r\n  addRecipe() {\r\n    this.recipeService.addRecipe(this.newRecipe).subscribe(() => {\r\n      this.newRecipe = { title: '', ingredients: '', instructions: '', imageUrl: '' };\r\n      this.loadRecipes();\r\n    });\r\n  }\r\n\r\n  deleteRecipe(id: string) {\r\n    this.recipeService.deleteRecipe(id).subscribe(() => this.loadRecipes());\r\n  }\r\n\r\n  startEdit(recipe: Recipe) {\r\n    this.editingId = recipe._id!;\r\n    this.editRecipe = { ...recipe };\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.editingId = null;\r\n  }\r\n\r\n  updateRecipe(recipe: Recipe) {\r\n    if (this.editRecipe._id) {\r\n      this.recipeService.updateRecipe(this.editRecipe).subscribe(() => {\r\n        this.editingId = null;\r\n        this.loadRecipes();\r\n      });\r\n    }\r\n  } \r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAUrC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAMVC,aAAA;EALpBC,OAAO,GAAa,EAAE;EACtBC,SAAS,GAAW;IAAEC,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,YAAY,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAE;EAClFC,UAAU,GAAW;IAAEJ,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,YAAY,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAE;EACnFE,SAAS,GAAkB,IAAI;EAE/BC,YAAoBT,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAC/B,IAAI,CAACU,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAACV,aAAa,CAACW,UAAU,EAAE,CAACC,SAAS,CAACC,IAAI,IAAI,IAAI,CAACZ,OAAO,GAAGY,IAAI,CAAC;EACxE;EAEAC,SAASA,CAAA;IACP,IAAI,CAACd,aAAa,CAACc,SAAS,CAAC,IAAI,CAACZ,SAAS,CAAC,CAACU,SAAS,CAAC,MAAK;MAC1D,IAAI,CAACV,SAAS,GAAG;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,YAAY,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAC/E,IAAI,CAACI,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;EAEAK,YAAYA,CAACC,EAAU;IACrB,IAAI,CAAChB,aAAa,CAACe,YAAY,CAACC,EAAE,CAAC,CAACJ,SAAS,CAAC,MAAM,IAAI,CAACF,WAAW,EAAE,CAAC;EACzE;EAEAO,SAASA,CAACC,MAAc;IACtB,IAAI,CAACV,SAAS,GAAGU,MAAM,CAACC,GAAI;IAC5B,IAAI,CAACZ,UAAU,GAAG;MAAE,GAAGW;IAAM,CAAE;EACjC;EAEAE,UAAUA,CAAA;IACR,IAAI,CAACZ,SAAS,GAAG,IAAI;EACvB;EAEAa,YAAYA,CAACH,MAAc;IACzB,IAAI,IAAI,CAACX,UAAU,CAACY,GAAG,EAAE;MACvB,IAAI,CAACnB,aAAa,CAACqB,YAAY,CAAC,IAAI,CAACd,UAAU,CAAC,CAACK,SAAS,CAAC,MAAK;QAC9D,IAAI,CAACJ,SAAS,GAAG,IAAI;QACrB,IAAI,CAACE,WAAW,EAAE;MACpB,CAAC,CAAC;IACJ;EACF;CACD;AA1CYX,mBAAmB,GAAAuB,UAAA,EAP/B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,iBAAiB;EAC3BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC5B,YAAY,EAAEC,WAAW,CAAC;EACpC4B,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACW5B,mBAAmB,CA0C/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}